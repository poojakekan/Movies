{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91702\\\\Downloads\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const retryTimeout = useRef(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('https://api.example.com/movies'); // Replace with your API endpoint\n      const fetchedMovies = response.data.map(movie => ({\n        id: movie.id,\n        title: movie.title,\n        openingText: movie.openingText,\n        releaseDate: movie.releaseDate\n      }));\n      setMovies(fetchedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError('Something went wrong... Retrying');\n      setIsLoading(false);\n      retryTimeout.current = setTimeout(fetchMoviesHandler, 5000);\n    }\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n    return () => {\n      if (retryTimeout.current) {\n        clearTimeout(retryTimeout.current);\n      }\n    };\n  }, [fetchMoviesHandler]);\n  const cancelRetryHandler = useCallback(() => {\n    if (retryTimeout.current) {\n      clearTimeout(retryTimeout.current);\n      setError(null);\n    }\n  }, []);\n  const moviesListMemo = useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: error && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelRetryHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 22\n      }, this) : moviesListMemo, error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MC7S036+1pOlibIw+pw0M6KKAjY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useMemo","axios","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","retryTimeout","fetchMoviesHandler","response","get","fetchedMovies","data","map","movie","id","title","openingText","releaseDate","current","setTimeout","clearTimeout","cancelRetryHandler","moviesListMemo","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","children","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/91702/Downloads/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef, useMemo } from 'react';\nimport axios from 'axios';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const retryTimeout = useRef(null);\n\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get('https://api.example.com/movies'); // Replace with your API endpoint\n      const fetchedMovies = response.data.map((movie) => ({\n        id: movie.id,\n        title: movie.title,\n        openingText: movie.openingText,\n        releaseDate: movie.releaseDate,\n      }));\n      setMovies(fetchedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError('Something went wrong... Retrying');\n      setIsLoading(false);\n      retryTimeout.current = setTimeout(fetchMoviesHandler, 5000);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n    return () => {\n      if (retryTimeout.current) {\n        clearTimeout(retryTimeout.current);\n      }\n    };\n  }, [fetchMoviesHandler]);\n\n  const cancelRetryHandler = useCallback(() => {\n    if (retryTimeout.current) {\n      clearTimeout(retryTimeout.current);\n      setError(null);\n    }\n  }, []);\n\n  const moviesListMemo = useMemo(() => {\n    return <MoviesList movies={movies} />;\n  }, [movies]);\n\n  return (\n    <React.Fragment>\n      <section>\n        {error && <button onClick={cancelRetryHandler}>Cancel</button>}\n      </section>\n      <section>\n        {isLoading ? <p className=\"loading\">Loading...</p> : moviesListMemo}\n        {error && <p className=\"error\">{error}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}