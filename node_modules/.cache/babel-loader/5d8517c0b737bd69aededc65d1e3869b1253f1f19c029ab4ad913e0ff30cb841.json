{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91702\\\\Downloads\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('https://api.example.com/movies'); // Replace with your API endpoint\n      const fetchedMovies = response.data.map(movie => ({\n        id: movie.id,\n        title: movie.title,\n        openingText: movie.openingText,\n        releaseDate: movie.releaseDate\n      }));\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Failed to fetch movies:', error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","get","fetchedMovies","data","map","movie","id","title","openingText","releaseDate","error","console","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91702/Downloads/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchMoviesHandler = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('https://api.example.com/movies'); // Replace with your API endpoint\n      const fetchedMovies = response.data.map((movie) => ({\n        id: movie.id,\n        title: movie.title,\n        openingText: movie.openingText,\n        releaseDate: movie.releaseDate,\n      }));\n      setMovies(fetchedMovies);\n    } catch (error) {\n      console.error('Failed to fetch movies:', error);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {isLoading ? <p>Loading...</p> : <MoviesList movies={movies} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMW,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrCD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC,CAAC,CAAC;MACpE,MAAMC,aAAa,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAAEC,KAAK,KAAM;QAClDC,EAAE,EAAED,KAAK,CAACC,EAAE;QACZC,KAAK,EAAEF,KAAK,CAACE,KAAK;QAClBC,WAAW,EAAEH,KAAK,CAACG,WAAW;QAC9BC,WAAW,EAAEJ,KAAK,CAACI;MACrB,CAAC,CAAC,CAAC;MACHb,SAAS,CAACM,aAAa,CAAC;IAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;IACAZ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEN,OAAA,CAACL,KAAK,CAACyB,QAAQ;IAAAC,QAAA,gBACbrB,OAAA;MAAAqB,QAAA,eACErB,OAAA;QAAQsB,OAAO,EAAEf,kBAAmB;QAAAc,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACV1B,OAAA;MAAAqB,QAAA,EACGhB,SAAS,gBAAGL,OAAA;QAAAqB,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAAG1B,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACxB,EAAA,CA/BQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}